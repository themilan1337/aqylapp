{include '../../partials/header.latte'}
      <!-- Main content -->
      <main class="grid grid-cols-1 lg:grid-cols-3 gap-6 ">
        <div class="lg:col-span-2">
          <div class="flex flex-col md:flex-row justify-between items-center mb-6 space-y-4 md:space-y-0">
            <h1 class="text-2xl flex font-bold">
              Настройки
            </h1>
          </div>

          <!-- Settings Sections -->
          <div class="space-y-6">
            <!-- Account Settings -->
            <div class="bg-white rounded-2xl p-6 border">
              <h2 class="text-xl font-semibold mb-4">Настройки аккаунта</h2>
              
              <div class="space-y-4">
                
                <div class="flex space-x-4">
                  <div class="flex flex-col">
                    <label class="text-gray-700 mb-2">Имя</label>
                    <input id="firstName" type="text" class="border font-semibold rounded-lg p-2 outline-none focus:border-green-500 transition" value="{$user->firstname}">
                  </div>
                  <div class="flex flex-col">
                    <label class="text-gray-700 mb-2">Фамилия</label>
                    <input id="lastName" type="text" class="border font-semibold rounded-lg p-2 outline-none focus:border-green-500 transition" value="{$user->lastname}">
                  </div>
                </div>

                <div class="flex flex-col">
                  <label class="text-gray-700 mb-2">Язык</label>
                  <select class="border rounded-lg font-semibold p-2 cursor-pointer">
                    <option>Русский</option>
                    <option>Қазақ тiлi</option>
                    <option>English</option>
                  </select>
                </div>
              </div>
            </div>

            

            <!-- Learning Preferences -->
            <!-- <div class="bg-white rounded-2xl p-6 border">
              <h2 class="text-xl font-semibold mb-4">Learning Preferences</h2>
              
              <div class="space-y-4">
                <div class="flex items-center justify-between">
                  <span class="text-gray-700">Daily Goal (minutes)</span>
                  <input type="number" class="border rounded-lg p-2 w-24" value="30">
                </div>

                <div class="flex items-center justify-between">
                  <span class="text-gray-700">Sound Effects</span>
                  <label class="relative inline-flex items-center cursor-pointer">
                    <input type="checkbox" class="sr-only peer" checked>
                    <div class="w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-green-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-green-600"></div>
                  </label>
                </div>

                <div class="flex items-center justify-between">
                  <span class="text-gray-700">Difficulty Level</span>
                  <select class="border rounded-lg p-2">
                    <option>Beginner</option>
                    <option>Intermediate</option>
                    <option>Advanced</option>
                  </select>
                </div>
              </div>
            </div> -->


            <!-- Save Button -->
            <div class="flex justify-end">
              <button id="saveData" class="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 transition-colors">
                Сохранить изменения
              </button>
            </div>
          </div>
        </div>

        <!-- Right Sidebar -->
        <div class="space-y-6">
          <!-- Profile Card -->
          <div class="bg-white rounded-2xl p-6 border">
            <div class="flex flex-col items-center">
              <img src="{$picture}" alt="" class="w-24 h-24 object-cover bg-gray-200 rounded-full mb-4">
              <h3 class="text-xl font-semibold mb-2">{$fullname}</h3>
              <p class="text-gray-600 mb-4 px-4 py-1 border rounded-full">Студент</p>
              <button class="hidden text-green-600 hover:underline">Изменить аватарку</button>
            </div>
          </div>

          <!-- созвон 15.03 обсудим. -->
          <!-- Subscription Info -->
          <!-- <div class="bg-white rounded-2xl p-6 border">
            <h3 class="text-xl font-semibold mb-4">Subscription</h3>
            <div class="space-y-2">
              <p class="text-gray-600">Current Plan: <span class="font-semibold">BASIC</span></p>
              <p class="text-gray-600">Autorenew: <span class="font-semibold">On</span></p>
              <p class="text-gray-600">Next Billing: <span class="font-semibold">Jan 1, 2024</span></p>
              <button onclick="window.location = 'managesubscription.php';" class="text-green-600 hover:underline">Manage Subscription</button>
            </div>
          </div> -->


        </div>
      </main>
    </div>
  </div>
  <script src="/tailwind.js"></script>
  <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
  <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
  <script n:syntax=off>
    async function updateStudentData(user_id, data) {
        try {
            const response = await fetch(`${window.location.origin}/api/settings/update`, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    user_id,
                    data
                })
            });
    
            if (!response.ok) {
                throw new Error(`Error: ${response.status}`);
            }
    
            return await response.json();
        } catch (error) {
            return error.message;
        }
    }

    function getUserData() {
      return JSON.parse(
      decodeURIComponent(
          document.cookie.split('; ')
          .find(row => row.startsWith('user='))
          ?.split('=')[1] || '{}'
          )   
      );
    }

    document.getElementById('saveData').addEventListener('click', async () => {
      const first_name = document.getElementById('firstName').value;
      const last_name = document.getElementById('lastName').value;

      if (first_name.length < 1 || last_name.length < 1) {
            Toastify({
              text: "Missing Fields",
              duration: 3000,
              newWindow: true,
              close: true,
              gravity: "top",
              position: "right",
              stopOnFocus: true,
              style: {
                      background: "linear-gradient(to right, rgb(255, 102, 102), rgb(255, 153, 153))",
                  },
            }).showToast();
        return
      }

      const res = await updateStudentData(getUserData().id, {first_name, last_name});

      if (res.success) {
            Toastify({
              text: "Success",
              duration: 3000,
              newWindow: true,
              close: true,
              gravity: "top",
              position: "right",
              stopOnFocus: true,
              style: {
                      background: "linear-gradient(to right,rgb(34, 197, 94),rgb(34, 197, 94))",
                  },
            }).showToast();
      } else if (res.error) {
            Toastify({
              text: res.error,
              duration: 3000,
              newWindow: true,
              close: true,
              gravity: "top",
              position: "right",
              stopOnFocus: true,
              style: {
                      background: "linear-gradient(to right, rgb(255, 102, 102), rgb(255, 153, 153))",
                  },
            }).showToast();
      }
    }); 
  </script>
{include '../../partials/footer.latte'}